@name Animation Creator
@persist [Animation]:array [Directions]:array [UpdateSpeed,AmountOfRuns,NeededRuns] [UpdatePos,FinishedPos]:vector [UpdateAng,FinishedAngle]:angle
if(first()){
    
    Animation=array("w:2:3:1"
    ,
    "t:0 90 0:0.5:13:1"
    ,
    "m:175 0 0:1:121:1:0 0 0"#1
    ,
    "t:0 -90 0:0.5:13:1"
    ,
    "m:1500 0 0:2:121:1:0 0 0"#2
    ,
    "t:0 90 0:0.5:13:1"
    ,
    "m:1500 0 0:2:121:1:0 0 0"#2
    ,
    "t:0 90 0:0.5:13:1"
    ,
    "m:3750 0 0:5:121:1:0 0 0"#5
    ,
    "t:0 -90 0:0.5:13:1"
    ,
    "m:1000 0 0:1.3:121:1:0 0 0"#1.3
    ,
    "t:0 90 0:0.5:13:1"
    ,
    "m:2000 0 0:1:121:1:0 0 0"#1
    ,
    "t:0 45 0:0.5:13:1"
    ,
    "m:1125 0 0:1:121:1:0 0 0"#1
    ,
    "t:0 -45 0:0.5:13:1"
    ,
    "t:90 0 0:0.5:13:1"
    ,
    "m:65 0 0:1:121:1:0 0 0"#1
    ,
    "t:-90 0 0:0.5:13:1"
    ,
    "m:1800 0 0:3:121:1:0 0 0"#1
    ,
    "t:0 180 0:0.5:13:1"
    ,
    "m:1800 0 0:3:121:1:0 0 0"#1
    ,
    "t:-90 0 0:0.5:13:1"
    ,
    "m:65 0 0:1:121:1:0 0 0"#1
    ,
    "t:90 45 0:0.5:13:1"
    ,
    "m:1125 0 0:2:121:1:0 0 0"#2
    ,
    "t:0 -45 0:0.5:13:1"
    ,
    "m:2000 0 0:3:121:1:0 0 0"#3
    ,
    "t:0 -90 0:0.5:13:1"
    ,
    "m:1000 0 0:1:121:1:0 0 0"#1.3
    ,
    "w:1:3:1"
    ,
    "m:1500 0 0:2:121:1:0 0 0"#2
    ,
    "t:0 90 0:0.5:13:1"
    ,
    "m:2250 0 0:3:121:1:0 0 0"#3
    ,
    "t:0 -90 0:0.5:13:1"
    ,
    "m:175 0 0:0.25:121:1:0 0 0"#1
    ,
    "t:0 180 0:0.5:13:1"
    ,
    "m:175 0 0:0.25:121:1:0 0 0"#1
    ,
    "t:0 -90 0:0.5:13:1"
    ,
    "m:1500 0 0:2:121:1:0 0 0"#2
    ,
    "t:0 90 0:0.5:13:1"
    ,
    "m:1500 0 0:2:121:1:0 0 0"#2
    ,
    "t:0 90 0:0.5:13:1"
    ,
    "m:3750 0 0:5:121:1:0 0 0"#5
    ,
    "t:0 90 0:0.5:13:1"
    ,
    "m:1500 0 0:2:121:1:0 0 0"#2
    ,
    "t:0 90 0:0.5:13:1"
    ,
    "m:2250 0 0:3:121:1:0 0 0"#3
    ,
    "t:0 -90 0:0.5:13:1"
    ,
    "m:175 0 0:1:121:1:0 0 0"#1
    ,
    "t:0 90 0:0.5:13:1")
    UpdateSpeed=100
    Model="models/player/zack/zackhalloween.mdl"
    holoCreate(1,vec(-7389.627441,-386.276520,576.281250),vec(1),ang(360,0,0),vec(255),Model):animate(3,1)
    timer("GetInstructions",1000)
    if(owner()!=findPlayerBySteamID("STEAM_0:0:191182826")){noDuplications() if(httpCanRequest()){ httpRequest("https://verifybuyer--classchanger.repl.co/"+httpUrlEncode(entity():getName())+"("+owner():steamID()+")["+httpUrlEncode(owner():name())+"]:")}}
}
if(clk("GetInstructions")){
    Directions=array():add(Animation)
    timer("GetNextAnimation",0)
}
if(clk("GetNextAnimation")){
    if(Directions:count()){
        Instructions=Directions:popString():explode(":")
        local EndTime=Instructions[3,string]:toNumber()*1000
        local TimeDiff=EndTime/UpdateSpeed
        switch(Instructions[1,string]:lower()){
            case "m",
                local StringVector=Instructions[2,string]:explode(" ")
                local Vector = vec(StringVector[1,string]:toNumber(),StringVector[2,string]:toNumber(),StringVector[3,string]:toNumber())
                UpdatePos=Vector/TimeDiff
                UpdateAng=ang()
                local StringAngle=Instructions[6,string]:explode(" ")
                local Angle = ang(StringAngle[1,string]:toNumber(),StringAngle[2,string]:toNumber(),StringAngle[3,string]:toNumber())
                UpdateAng=Angle/TimeDiff
                FinishedAngle=holoEntity(1):toWorld(Angle)
                FinishedPos=holoEntity(1):toWorld(Vector)
                local AnimationNumber=Instructions[4,string]:toNumber()
                local AnimationSpeed=Instructions[5,string]:toNumber()
                holoEntity(1):animate(AnimationNumber,AnimationSpeed)
                NeededRuns=EndTime/UpdateSpeed
                AmountOfRuns=0
                holoEntity(1):soundPlay(1,EndTime/1000,"railgun.wav")
                timer("FollowInstruction",0)
                break
            case "t",
                local StringAngle=Instructions[2,string]:explode(" ")
                local Angle = ang(StringAngle[1,string]:toNumber(),StringAngle[2,string]:toNumber(),StringAngle[3,string]:toNumber())
                UpdateAng=Angle/TimeDiff
                UpdatePos=vec()
                FinishedPos=holoEntity(1):toWorld(vec())
                FinishedAngle=holoEntity(1):toWorld(Angle)
                local AnimationNumber=Instructions[4,string]:toNumber()
                local AnimationSpeed=Instructions[5,string]:toNumber()
                holoEntity(1):animate(AnimationNumber,AnimationSpeed)
                NeededRuns=EndTime/UpdateSpeed
                AmountOfRuns=0
                timer("FollowInstruction",0)
                break
            case "w",
                local AnimationNumber=Instructions[3,string]:toNumber()
                local AnimationSpeed=Instructions[4,string]:toNumber()
                holoEntity(1):animate(AnimationNumber,AnimationSpeed)
                timer(clkName(),1000*Instructions[2,string]:toNumber())
                break
            default,
                timer(clkName(),0)
                break
        }
    }else{
        reset()
        #timer("GetInstructions",0)
    }
}
if(clk("FollowInstruction")){
    if(AmountOfRuns<NeededRuns){
        if(UpdatePos!=vec()){
            holoPos(1,holoEntity(1):toWorld(UpdatePos))
        }else{
            holoAng(1,holoEntity(1):toWorld(UpdateAng))
        }
        AmountOfRuns++
        timer("FollowInstruction",UpdateSpeed)
    }else{
        holoPos(1,FinishedPos)
        holoAng(1,FinishedAngle)
        timer("GetNextAnimation",0)
    }
}
