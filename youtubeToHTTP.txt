@name Personal Music Player
@persist Settings:table PlayList:gtable
if(first()){
    noDuplications()
    Settings=table(
    "CurrentSong"=67,
    "Volume"=1,
    "Disable 3D?"=1,
    "Model"="models/bluesdoubleornothing/slots_1.mdl",
    "PlayList"="Pie's Youtube Playlist",
    "Streaming Channel"=10
    )
    PlayList=gTable("Pie's Youtube Playlist",1)
    function void string:youtubeToMP3() {
        setName("http://michaelbelgium.me/ytconverter/convert.php?youtubelink="+This)
        httpRequest("http://michaelbelgium.me/ytconverter/convert.php?youtubelink="+This)
        reset()
    }
    function void number:stopMusic(){
        if(This){
            streamStop(Settings["Volume",number])
        }
    }
    function void number:printData(){
        if(This){
            printTable(jsonDecode(httpData()))
        }
    }
    function number table:isValidData(){
        if(!This["error",number]){
            return 1
        } else{
            return 0
        }
    }
    function number streamData(Data:table,Target:entity){
        if(Data){
            1:stopMusic()
            stopAllTimers()
            local E=Target:isValid()? Target : entity()
            if(streamCanStart() & Data:isValidData()){
                E:streamStart(Settings["Streaming Channel",number],Data["file",string],Settings["Volume",number])
                timer("Next Song",Data["duration",number]*1000-1000)
                setName("Currently Playing: "+Data["title",string])
                streamRadius(Settings["Streaming Channel",number],1)
                return 1
            } else{
                setName("Stream Could Not Start: " + opcounter():toString())
                return 0
            }
        }
    }
    function number number:httpToData(Target:entity){
        if(This){
            local Table=jsonDecode(httpData())
            return streamData(Table,Target)
        } else{
            return 0
        }
    }
    function number entity:isWhiteListed(){
        return This==owner()
    }
    function void number:nextSong(){
        local NextSong=Settings["CurrentSong",number]+1
        Settings["CurrentSong",number]=NextSong
        local Song= PlayList[Settings["PlayList",string],array]:exists(NextSong) ? PlayList[Settings["PlayList",string],array][NextSong,string] : PlayList[Settings["PlayList",string],array][1,string]
        if (PlayList[Settings["PlayList",string],array][NextSong,string]!=""){
            PlayList[Settings["PlayList",string],array][NextSong,string]:youtubeToMP3()
        } else{
            print("")
        }
    }
    function void number:chatCommand(){
        if(This & lastSpoke():isWhiteListed()){
            local LS = lastSaid():explode(" ")
            switch(LS[1,string]){
                case "youtube",
                    LS[2,string]:youtubeToMP3()
                    break
                case "start",
                    Settings["CurrentSong",number]=LS[2,string]:toNumber()-1
                    1:nextSong()
                    break
                case "volume",
                    Settings["Volume",number]=LS[2,string]:toNumber()
                    break
                case "target",
                    local Target=lastSpoke():aimEntity()
                    if(Target:isValid()){
                        Settings["Streaming Entity",entity]=Target
                        print("Music Attached To: "+Target:name()+" at " + Target:pos())
                    }
                    break
                case "songs",
                    printTable(PlayList:toTable())
                    break
                case "settings",
                    printTable(Settings)
                    break
                case "timers",
                    printTable(invert(getTimers()))
                    break
                default,
                    break
            }
        }
    }
    streamDisable3D(Settings["Disable 3D?",number])
    streamRadius(Settings["Streaming Channel",number],1)
    runOnChat(1)
    runOnHTTP(1)
    Settings["Streaming Entity",entity]=owner()
}
if(httpClk() & httpRequestUrl()==entity():getName()){
    local Link=entity():getName():explode(".php?youtubelink=")[2,string]
    Settings["CurrentSong",number]=invert(PlayList[Settings["PlayList",string],array])[Link,number]
    print(httpClk():httpToData(Settings["Streaming Entity",entity]))
}
chatClk():chatCommand()
if(clkName()=="Next Song"){
    print("Next Song Playing")
    1:nextSong()
}
