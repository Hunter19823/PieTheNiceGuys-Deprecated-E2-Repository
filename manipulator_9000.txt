@name Pie's Manipulator 9000
@persist [AimEntity]:entity
if(first()){
    function number entity:canManipulate(){
        return This:owner() == owner()
    }
    runOnMouseKey(1)
    runOnChat(1)
}
if(clMouseKeyPress("right") & owner():weapon():type()=="weapon_physcannon"){
    print("Grav Gunned")
    timer("Pickup",500)
}
if(clk("Pickup")){
    P=owner():aimEntity()
    if(P:isPlayerHolding()){
        if(P:owner()==owner()){
            AimEntity=P
            print("You own this")
        }else{
            print("You don't own this")
        }
    }else{
        print("Not Held")
    }
}
if(chatClk(owner())){
    LS=lastSaid():explode(" ")
    Parameters=lastSaid():sub(LS[1,string]:length()+2)
    switch(LS[1,string]:lower()){
        case "material",
            if(AimEntity:canManipulate()){
                print(Parameters)
                AimEntity:setMaterial(Parameters)
            }
            break
        case "parent",
            if(AimEntity:canManipulate()){
                AimEntity:parentTo(entity())
            }
            break
        case "remove",
            if(AimEntity:canManipulate()){
                AimEntity:remove(LS[2,string]:toNumber())
            }
            break
        case "store",
            if(AimEntity:canManipulate()){
                AimEntity:propManipulate(entity():toWorld(vec(0,0,50)),AimEntity:angles(),0,gravity(),0)
            }
            break
        case "save",
            if(AimEntity:canManipulate()){
                P=propSpawn("models/props/cs_assault/money.mdl",1)
                weld(P,AimEntity)
                
            }
            break
        case "mass",
            if(AimEntity:canManipulate()){
                P:setMass(LS[2,string]:toNumber())
            }
            break
        case "grav",
        case "gravity",
            if(AimEntity:canManipulate()){
                P:setPhysProp(AimEntity:propPhysicalMaterial(),LS[2,string]:toNumber())
                P:propManipulate(AimEntity:pos(),AimEntity:angles(),0,LS[2,string]:toNumber(),0)
            }
            break
    }
}
