@name 9-Square Event E2
@persist [S1,S2,S3,S4,S5,S6,S7,S8,S9]:entity [Intilized,Speed,Round,CurrentlyOn,Height] [Color] [TempColors,Platform,TempList]:array
if(first()){
    timer("Row1",100)
    holoCreate(1,entity():pos()+vec(0,0,150),vec(-8),entity():angles(),vec(255),"models/hunter/blocks/cube2x2x2.mdl")
    holoScaleUnits(1,vec(-900,-900,-500))
    holoMaterial(1,"phoenix_storms/gear")
    holoDisableShading(1,1)
    holoParent(1,entity())
    runOnKeys(owner(),1)
    Height=150
    local E=entity()
    E["IsActual",number]=1
    E["Height",number]=Height
}elseif(!Intilized){
    if(clk("Row1")){
        S1=propSpawn("models/hunter/plates/plate6x6.mdl",entity():pos()+vec(300,300,Height),ang(),1)
        S2=propSpawn("models/hunter/plates/plate6x6.mdl",entity():pos()+vec(300,0,Height),ang(),1)
        S3=propSpawn("models/hunter/plates/plate6x6.mdl",entity():pos()+vec(300,-300,Height),ang(),1)
        timer("Row2",1000)
        S1:setMaterial("phoenix_storms/gear")
        S2:setMaterial("phoenix_storms/gear")
        S3:setMaterial("phoenix_storms/gear")
    }elseif(clk("Row2")){
        S4=propSpawn("models/hunter/plates/plate6x6.mdl",entity():pos()+vec(0,300,Height),ang(),1)
        S5=propSpawn("models/hunter/plates/plate6x6.mdl",entity():pos()+vec(0,0,Height),ang(),1)
        S6=propSpawn("models/hunter/plates/plate6x6.mdl",entity():pos()+vec(0,-300,Height),ang(),1)
        timer("Row3",1000)
        S4:setMaterial("phoenix_storms/gear")
        S5:setMaterial("phoenix_storms/gear")
        S6:setMaterial("phoenix_storms/gear")
        holoParent(1,S5)
        local E=entity()
        E["Platform",entity]=S5
    }elseif(clk("Row3")){
        S7=propSpawn("models/hunter/plates/plate6x6.mdl",entity():pos()+vec(-300,300,Height),ang(),1)
        S8=propSpawn("models/hunter/plates/plate6x6.mdl",entity():pos()+vec(-300,0,Height),ang(),1)
        S9=propSpawn("models/hunter/plates/plate6x6.mdl",entity():pos()+vec(-300,-300,Height),ang(),1)
        S7:setMaterial("phoenix_storms/gear")
        S8:setMaterial("phoenix_storms/gear")
        S9:setMaterial("phoenix_storms/gear")
        timer("Color1",10)
    }elseif(clk("Color1")){
        TempColors=array(
        vec(255,0,0),
        vec(29,0,255),
        vec(225,255,0),
        vec(127,95,0),
        vec(0,0,0),
        vec(0,255,255),
        vec(33,255,0),
        vec(127,0,255),
        vec(255))
        local Index=random(1,TempColors:count())
        S1:setColor(TempColors:removeVector(Index))
        Index=random(1,TempColors:count())
        S2:setColor(TempColors:removeVector(Index))
        Index=random(1,TempColors:count())
        S3:setColor(TempColors:removeVector(Index))
        timer("Color2",10)
    }elseif(clk("Color2")){
        local Index=random(1,TempColors:count())
        S4:setColor(TempColors:removeVector(Index))
        Index=random(1,TempColors:count())
        S5:setColor(TempColors:removeVector(Index))
        Index=random(1,TempColors:count())
        S6:setColor(TempColors:removeVector(Index))
        timer("Color3",10)
    }elseif(clk("Color3")){
        local Index=random(1,TempColors:count())
        S7:setColor(TempColors:removeVector(Index))
        Index=random(1,TempColors:count())
        S8:setColor(TempColors:removeVector(Index))
        Index=random(1,TempColors:count())
        S9:setColor(TempColors:removeVector(Index))
        timer("Parent1",10)
    }elseif(clk("Parent1")){
        S5:parentTo(entity())
        S1:parentTo(S5)
        S2:parentTo(S5)
        S3:parentTo(S5)
        S4:parentTo(S5)
        S6:parentTo(S5)
        timer("Parent2",10)
    }elseif(clk("Parent2")){
        S7:parentTo(S5)
        S8:parentTo(S5)
        S9:parentTo(S5)
        Platform=array(S1,S2,S3,S4,S5,S6,S7,S8,S9)
        timer("Reset",0)
        timer("PickColor",1000)
        Intilized=1
    }
}else{
    if(keyClk(keyClk())==1){
        if(keyClkPressed()=="pad_5"){
            CurrentlyOn=!CurrentlyOn
            if(CurrentlyOn){
                print("The Event is Now Under Way...")
            }else{
                print("The Event is now Paused.")
            }
            timer("PickColor",1000)
        }
        if(keyClkPressed()=="pad_plus"){
            Speed+=100
            print("New Delay: "+ (10000-Speed))
        }
        if(keyClkPressed()=="pad_minus"){
            Speed-=100
            print("New Delay: "+ (10000-Speed))
        }
    }else{
        if(clk("PickColor")){
            if(CurrentlyOn){
                Round++
                local Index=random(1,Platform:count())
                local Safe=TempList:removeEntity(Index)
                holoColor(1,Safe:getColor())
                if(Round%2==0 && Speed<8000){
                    Speed+=1000
                }
                timer("Drop",10000-Speed)
                print("Round #"+Round+"<br>Drop Delay: "+(10000-Speed))
            }
        }
        if(clk("Solid")){
            local P=TempList:popEntity()
            P:noCollideAll(0)
            P:setAlpha(255)
            if(TempList:count()>0){
                timer("Solid",0)
            }else{
                timer("Reset",0)
                timer("PickColor",250)
            }
        }
        if(clk("Drop")){
            local P=TempList:popEntity()
            P:noCollideAll(1)
            P:setAlpha(0)
            if(TempList:count()>0){
                timer("Drop",0)
            }else{
                timer("Reset",0)
                timer("Solid",5000)
            }
        }
        if(clk("Reset")){
            TempList=Platform:clone()
        }
    }
}
