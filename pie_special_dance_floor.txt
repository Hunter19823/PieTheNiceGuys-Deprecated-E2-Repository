@name Pie Special Dance Floor
@model models/hunter/plates/plate1x1.mdl
@persist State Spacing Limit Original:vector
if (first() | duped()) {
    function vector randomColor(){
        Limit=175
        R=random(Limit)
        G=random(Limit)
        B=random(Limit)
        return vec(R,G,B)
    }
    function vector vector:nextColor(){
        #[
        R=This:x()+28+(1/3)
        G=This:y()-(28+(1/3))
        B=This:z()+(28+(1/3))
        ]#
        R=This:x()+((255-Original:x())/18)
        G=This:y()+((255-Original:y())/18)
        B=This:z()+((255-Original:z())/18)
        
        return vec(R,G,B)
    }
    State=100
    Spacing=48
}
Speed=1000
interval(Speed)
if(clk()){
    switch(State){
        #mid,left,down,right,up,bl,tr,tl,br
        case 100,
            entity():setfLight(entity():pos()+vec(0,0,100),randomColor(),entity():angles()+ang(90,0,0),"cs_havana/white",100,500,1)
            holoCreate(1,entity():pos()+vec(0,0,10),vec(0),entity():angles()+ang(90,0,0),vec(255),"models/props_phx/games/chess/board.mdl")
            holoScaleUnits(1,vec(0,142,142))
            holoParent(1,entity())
            holoMaterial(1,"effects/flicker_256")
            State++
            break
        case 101,
            P=propSpawn("models/hunter/plates/plate1x1.mdl",entity():pos()+vec(Spacing,(Spacing)*-1,0),1)
            #tl
            P:parentTo(entity()) P:setMaterial("effects/flicker_256")
            P:setColor(randomColor())
            State++
            break
        case 102,
            P=propSpawn("models/hunter/plates/plate1x1.mdl",entity():pos()+vec(0,(Spacing)*-1,0),1)
            #up
            P:parentTo(entity()) P:setMaterial("effects/flicker_256")
            P:setColor(randomColor())
            State++
            break
        case 103,
            P=propSpawn("models/hunter/plates/plate1x1.mdl",entity():pos()+vec((Spacing)*-1,(Spacing)*-1,0),1)
            #tr
            P:parentTo(entity()) P:setMaterial("effects/flicker_256")
            P:setColor(randomColor())
            State++
            break
        case 104,
            P=propSpawn("models/hunter/plates/plate1x1.mdl",entity():pos()+vec(Spacing,0,0),1)
            #Left
            P:parentTo(entity()) P:setMaterial("effects/flicker_256")
            P:setColor(randomColor())
            State++
            break
        case 105,
            #P=propSpawn(entity():pos()+vec(0,0,0),1)
            P=entity()
            #Mid
            #P:parentTo(entity()) P:setMaterial("effects/flicker_256")
            P:setMaterial("effects/flicker_256")
            State++
            break
        case 106,
            P=propSpawn("models/hunter/plates/plate1x1.mdl",entity():pos()+vec((Spacing)*-1,0,0),1)
            #right
            P:parentTo(entity()) P:setMaterial("effects/flicker_256")
            P:setColor(randomColor())
            State++
            break
        case 107,
            P=propSpawn("models/hunter/plates/plate1x1.mdl",entity():pos()+vec((Spacing),(Spacing),0),1)
            #br
            P:parentTo(entity()) P:setMaterial("effects/flicker_256")
            P:setColor(randomColor())
            State++
            break
        case 108,
            P=propSpawn("models/hunter/plates/plate1x1.mdl",entity():pos()+vec(0,Spacing,0),1)
            #Down
            P:parentTo(entity()) P:setMaterial("effects/flicker_256")
            P:setColor(randomColor())
            State++
            break
        case 109,
            P=propSpawn("models/hunter/plates/plate1x1.mdl",entity():pos()+vec((Spacing)*-1,Spacing,0),1)
            #bl
            P:parentTo(entity()) P:setMaterial("effects/flicker_256")
            P:setColor(randomColor())
            State++
            break
        case 110,
            local Count=100
            local Color=randomColor()
            holoColor(1,Color)
            entity():fLightColor(randomColor())
            break
    }
}
