@persist [Largest,Smallest]:vector [Vectors]:array
if(first()){
    noDuplications()
    Vectors=array(vec(-77,832,1000),vec(-2356,3099.63,350),vec(-77,832,1000),vec(-575,4354,270))
    timer("GetFirst",100)
    
    function void measureTape(Index, PointB:vector,PointA:vector,Color:vector) {
        local Target=PointB
        local EyePos=PointA
        local H=holoCreate(Index,EyePos,vec(0.1),ang(),Color,"models/hunter/blocks/cube8x8x025.mdl")
        holoScaleUnits(Index,vec(EyePos:distance(Target),5,5))
        holoAng(Index,-1*H:heading(Target))
        holoDisableShading(Index,1)
        holoPos(Index,EyePos-((EyePos-Target)/2))
        holoParent(Index,entity())
    }
    function createRectangle(Index,TopCorner:vector ,BottomCorner:vector,Color:vector){
        local Mid=(TopCorner-BottomCorner)/2 + BottomCorner
        holoCreate(Index,Mid,vec(1),ang(),Color,"models/hunter/blocks/cube4x4x4.mdl")
        measureTape(Index+1000,TopCorner,BottomCorner,Color)
        holoScaleUnits(Index,-1*abs(TopCorner-BottomCorner))
        print("Top: "+TopCorner+" ("+entity():pos():distance(TopCorner)+")"+"<br>Bottom: "+BottomCorner+" ("+entity():pos():distance(BottomCorner)+")"+"<br>Middle: "+Mid+" ("+entity():pos():distance(Mid)+")")
        holoVisible(Index,players(),0)
        holoVisible(Index,owner(),1)
    }
}
if(clk("GetFirst")){
    Largest=Vectors:popVector()
    Smallest=Largest
    timer("CheckNext",10)
}
if(clk("CheckNext")){
    if(Vectors:count()>0){
        local V=Vectors:popVector()
        if(Largest:x()<V:x()){
            Largest=Largest:setX(V:x())
        }
        if(Largest:y()<V:y()){
            Largest=Largest:setY(V:y())
        }
        if(Largest:z()<V:z()){
            Largest=Largest:setZ(V:z())
        }
        if(Smallest:x()>V:x()){
            Smallest=Smallest:setX(V:x())
        }
        if(Largest:y()>V:y()){
            Smallest=Smallest:setY(V:y())
        }
        if(Smallest:z()>V:z()){
            Smallest=Smallest:setZ(V:z())
        }
        timer("CheckNext",100)
    }else{
        print("Top Right: "+Largest+"<br>Bottom Left: "+Smallest)
        timer("Make Rectangle",500)
    }
}
if(clk("Make Rectangle")){
    createRectangle(1,Largest+250,Smallest-250,vec(255,0,0))
}
